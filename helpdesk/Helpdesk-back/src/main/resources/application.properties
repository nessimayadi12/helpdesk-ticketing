spring.application.name=Helpdesk-back

server.port=8084
springdoc.show-spring-data-rest=false
spring.datasource.url=jdbc:mysql://localhost:3306/user?&createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JPA Configuration
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# JWT
app.jwt.secret=change-me-please-change-me-change-me-change-me-32-change-me-64
app.jwt.expiration-ms=86400000

# CORS headers
# (CORS config class already limits to http://localhost:4200 and methods; ensure Authorization header is allowed by default)

# =========================
# Mail configuration
# =========================
# Who sends (can be overridden via env vars)
app.mail.from=${APP_MAIL_FROM:no-reply@helpdesk.local}
app.mail.fromName=${APP_MAIL_FROMNAME:HelpDesk}

# Recipients: leave empty to send only to the connected user (actor)
app.mail.to=${APP_MAIL_TO:}
app.mail.cc=${APP_MAIL_CC:}
app.mail.includeOwnerEmail=${APP_MAIL_INCLUDE_OWNER_EMAIL:false}
app.mail.enabled=${APP_MAIL_ENABLED:true}

# Spring Mail SMTP (provide creds via env; defaults suit Gmail)
spring.mail.host=${SPRING_MAIL_HOST:smtp.gmail.com}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:}
spring.mail.password=${SPRING_MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_SMTP_STARTTLS_ENABLE:true}
spring.mail.properties.mail.smtp.starttls.required=${SPRING_MAIL_SMTP_STARTTLS_REQUIRED:true}
spring.mail.properties.mail.debug=${SPRING_MAIL_DEBUG:true}